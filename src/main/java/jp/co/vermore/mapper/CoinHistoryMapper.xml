<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jp.co.vermore.mapper.CoinHistoryMapper">
    <resultMap id="CoinResultMap" type="jp.co.vermore.entity.CoinHistory">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Apr 03 14:34:53 CST 2018.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="coin_id" property="coinId" jdbcType="INTEGER"/>
        <result column="item_id" property="itemId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="amount" property="amount" jdbcType="BIGINT"/>
        <result column="coin_changed" property="coinChanged" jdbcType="BIGINT"/>
        <result column="coin_type" property="coinType" jdbcType="TINYINT"/>
        <result column="serial_number" property="serialNumber" jdbcType="VARCHAR"/>
        <result column="create_datetime" property="createDatetime" jdbcType="TIMESTAMP"/>
        <result column="update_datetime" property="updateDatetime" jdbcType="TIMESTAMP"/>
        <result column="del_flg" property="delFlg" jdbcType="BIT"/>
        <result column="note" property="note" jdbcType="VARCHAR"/>
        <result column="uuid" property="uuid" />
    </resultMap>

    <sql id="Base_Column_List">
    coin_history.id, coin_history.coin_id, coin_history.item_id, coin_history.user_id, coin_history.amount, coin_history.coin_changed, coin_history.coin_type, coin_history.serial_number, coin_history.create_datetime, coin_history.update_datetime,
    coin_history.del_flg, coin_history.note
  </sql>

    <insert id="insertSelective" parameterType="jp.co.vermore.entity.CoinHistory">
        insert into coin_history
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="coinId != null">
                coin_id,
            </if>
            <if test="itemId != null">
                item_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="coinChanged != null">
                coin_changed,
            </if>
            <if test="coinType != null">
                coin_type,
            </if>
            <if test="serialNumber != null">
                serial_number,
            </if>
            <if test="createDatetime != null">
                create_datetime,
            </if>
            <if test="updateDatetime != null">
                update_datetime,
            </if>
            <if test="delFlg != null">
                del_flg,
            </if>
            <if test="note != null">
                note,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="coinId != null">
                #{coinId,jdbcType=INTEGER},
            </if>
            <if test="itemId != null">
                #{itemId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=INTEGER},
            </if>
            <if test="coinChanged != null">
                #{coinChanged,jdbcType=BIGINT},
            </if>
            <if test="coinType != null">
                #{coinType,jdbcType=TINYINT},
            </if>
            <if test="serialNumber != null">
                #{serialNumber,jdbcType=VARCHAR},
            </if>
            <if test="createDatetime != null">
                #{createDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDatetime != null">
                #{updateDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlg != null">
                #{delFlg,jdbcType=BIT},
            </if>
            <if test="note != null">
                #{note,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="getNewestCoin" resultMap="CoinResultMap">
        select
        <include refid="Base_Column_List"/>
        from coin_history
        where del_flg = 0
        and user_id = #{userId}
        order by create_datetime desc
        LIMIT 1;
    </select>

    <select id="getCoinHistoryByUserId" resultMap="CoinResultMap">
        select
        <include refid="Base_Column_List"/>
        from coin_history
        where del_flg = 0
        and user_id = #{userId}
        order by create_datetime desc;
    </select>

    <select id="getTodayCoinListByUserId" resultMap="CoinResultMap">
        select
        <include refid="Base_Column_List"/>
        from coin_history
        where del_flg = 0
        and user_id = #{param1}
        and item_id = #{param2}
        and create_datetime &gt;= #{param3}
        and create_datetime &lt; #{param4}
    </select>

    <select id="getCoinHistoryByItem" resultMap="CoinResultMap">
        select
        <include refid="Base_Column_List"/>
        from coin_history
        where del_flg = 0
        and item_id = #{param1}
        and coin_id = #{param2}
        order by create_datetime desc;
    </select>

    <select id="getCoinHistoryBySerialNumber" resultMap="CoinResultMap" parameterType="String">
        select
        <include refid="Base_Column_List"/>
        from coin_history
        where del_flg = 0
        and serial_number = #{serialNumber};
    </select>


    <select id="getCoinHistoryAllByCondition" parameterType="jp.co.vermore.form.admin.CoinListForm"
            resultMap="CoinResultMap">
        select ch.coin_id, ch.item_id, ch.user_id, ch.amount, ch.create_datetime
        from coin_history as ch
        inner join(
        select coin_id, item_id, user_id, max(create_datetime) as max_create_datetime
        from coin_history
        where del_flg = 0
        group by coin_id, item_id, user_id
        ) as wt
        on ch.coin_id = wt.coin_id
        and ch.item_id = wt.item_id
        and ch.user_id = wt.user_id
        and ch.create_datetime = wt.max_create_datetime
        where ch.del_flg = 0
        <if test="coinId != null">
            and ch.coin_id = #{coinId}
        </if>
        <if test="userId != null">
            and ch.user_id = #{userId}
        </if>
        <if test="amount != null">
            and ch.amount &lt;= #{amount}
        </if>
        order by ${orderStatement}
        LIMIT #{length,jdbcType=INTEGER} OFFSET #{start,jdbcType=INTEGER};
    </select>

    <select id="getCoinHistoryCountByCondition" parameterType="jp.co.vermore.form.admin.RecruitListForm"
            resultType="int">
        select count(coin_id) as totalCount
        from (
        select ch.coin_id, ch.item_id, ch.user_id, ch.amount, ch.create_datetime
        from coin_history as ch
        inner join(
        select coin_id, item_id, user_id, max(create_datetime) as max_create_datetime
        from coin_history
        where del_flg = 0
        group by coin_id, item_id, user_id
        ) as wt
        on ch.coin_id = wt.coin_id
        and ch.item_id = wt.item_id
        and ch.user_id = wt.user_id
        and ch.create_datetime = wt.max_create_datetime
        where ch.del_flg = 0
        <if test="coinId != null">
            and ch.coin_id = #{coinId}
        </if>
        <if test="userId != null">
            and ch.user_id = #{userId}
        </if>
        <if test="amount != null">
            and ch.amount &lt;= #{amount}
        </if>
        );
    </select>

    <select id="getCoinHistoryCount" resultType="int">
    select count(id) as totalCount
    from (
    select ch.coin_id, ch.item_id, ch.user_id, ch.amount, ch.create_datetime
    from coin_history as ch
    inner join(
    select coin_id, item_id, user_id, max(create_datetime) as max_create_datetime
    from coin_history
    where del_flg = 0
    group by coin_id, item_id, user_id
    ) as wt
    on ch.coin_id = wt.coin_id
    and ch.item_id = wt.item_id
    and ch.user_id = wt.user_id
    and ch.create_datetime = wt.max_create_datetime
    where ch.del_flg = 0
    );
  </select>


    <select id="getCoinList" resultMap="CoinResultMap">
        select *
        from coin_history
        where del_flg = 0
        <if test="param1 != null ">
            and user_id = #{param1,jdbcType=INTEGER}
        </if>
        order by create_datetime desc
        LIMIT #{param2,jdbcType=INTEGER} OFFSET #{param3,jdbcType=INTEGER};
    </select>
    <select id="getCoinListCount" resultMap="CoinResultMap">
    select *
    from coin_history
    where del_flg = 0
    and user_id = #{param1,jdbcType=INTEGER}

  </select>

    <select id="getCoinHistoryList" parameterType="jp.co.vermore.form.admin.CoinListForm" resultMap="CoinResultMap">
        select
        <include refid="Base_Column_List"/>  ,user.uuid
        from coin_history
        left JOIN user ON user.id = coin_history.user_id
        where coin_history.del_flg = 0
        <if test="serialNumber != null and serialNumber!= ''">
            and coin_history.serial_number = #{serialNumber}
        </if>
        <if test="coinId != null and coinId != 1000">
            and coin_history.coin_id = #{coinId}
        </if>
        <if test="uuId != null and uuId!= ''">
            and user.uuid = #{uuId}
        </if>
        <if test="amountFrom != null and amountFrom!= ''">
            and coin_history.amount >= #{amountFrom}
        </if>
        <if test="amountTo != null and amountTo!= ''">
            and coin_history.amount &lt;= #{amountTo}
        </if>
        <if test="createDatetimeFrom != null">
            and date_format(coin_history.create_datetime,'%Y-%m-%d') &gt;=date_format(#{createDatetimeFrom},'%Y-%m-%d')
        </if>
        <if test="createDatetimeTo != null">
            and date_format(coin_history.create_datetime,'%Y-%m-%d') &lt;=date_format(#{createDatetimeTo},'%Y-%m-%d')
        </if>
        order by ${orderStatement}, create_datetime desc
        LIMIT #{length,jdbcType=INTEGER} OFFSET #{start,jdbcType=INTEGER};
    </select>

    <select id="getCoinHistoryListTotalCountFiltered" parameterType="jp.co.vermore.form.admin.CoinListForm"
            resultType="int">
        select count(id) as totalCount
        from coin_history
        where del_flg = 0
        <if test="serialNumber != null and serialNumber!= ''">
            and serial_number = #{serialNumber}
        </if>
        <if test="coinId != null and coinId != 1000">
            and coin_id = #{coinId}
        </if>
        <if test="userId != null and userId!= ''">
            and user_id = #{userId}
        </if>
        <if test="amountFrom != null and amountFrom!= ''">
            and amount >= #{amountFrom}
        </if>
        <if test="amountTo != null and amountTo!= ''">
            and amount &lt;= #{amountTo}
        </if>
        <if test="createDatetimeFrom != null">
            and date_format(coin_history.create_datetime,'%Y-%m-%d') &gt;=date_format(#{createDatetimeFrom},'%Y-%m-%d')
        </if>
        <if test="createDatetimeTo != null">
            and date_format(coin_history.create_datetime,'%Y-%m-%d') &lt;=date_format(#{createDatetimeTo},'%Y-%m-%d')
        </if>
    </select>

    <select id="getCoinHistoryListCount" resultType="int">
    select count(id) as totalCount
    from coin_history
    where del_flg = 0
  </select>

    <select id="getCoinListDetail" resultMap="CoinResultMap">
    select *
    from coin_history
    where del_flg = 0
    and id = #{param1,jdbcType=INTEGER}
  </select>
  <select id="getPointCount" resultType="int">
    select count(user_id) as count
    from coin_history
    where del_flg = 0
    and user_id = #{param1,jdbcType=INTEGER}
    and date_format(create_datetime,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d')
  </select>

</mapper>